<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxmoa.myhzt.mapper.generator.OutfallMapper">
  <resultMap id="BaseResultMap" type="com.zxmoa.myhzt.bean.generator.Outfall">
    <id column="outfallid" jdbcType="VARCHAR" property="outfallid" />
    <result column="outfallname" jdbcType="VARCHAR" property="outfallname" />
    <result column="outfalltypeid" jdbcType="VARCHAR" property="outfalltypeid" />
    <result column="riverid" jdbcType="VARCHAR" property="riverid" />
    <result column="outfallno" jdbcType="VARCHAR" property="outfallno" />
    <result column="lat" jdbcType="VARCHAR" property="lat" />
    <result column="lng" jdbcType="VARCHAR" property="lng" />
    <result column="fallmethod" jdbcType="VARCHAR" property="fallmethod" />
    <result column="inrivermethod" jdbcType="VARCHAR" property="inrivermethod" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="createuserid" jdbcType="VARCHAR" property="createuserid" />
    <result column="modifyuserid" jdbcType="VARCHAR" property="modifyuserid" />
    <result column="modifytime" jdbcType="VARCHAR" property="modifytime" />
    <result column="createtime" jdbcType="VARCHAR" property="createtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zxmoa.myhzt.bean.generator.OutfallWithBLOBs">
    <result column="from" jdbcType="LONGVARCHAR" property="from" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    outfallid, outfallname, outfalltypeid, riverid, outfallno, lat, lng, fallmethod, 
    inrivermethod, status, createuserid, modifyuserid, modifytime, createtime
  </sql>
  <sql id="Blob_Column_List">
    from
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zxmoa.myhzt.bean.generator.OutfallExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zx_outfall
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zxmoa.myhzt.bean.generator.OutfallExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zx_outfall
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.zxmoa.myhzt.bean.generator.OutfallKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zx_outfall
    where outfallid = #{outfallid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.zxmoa.myhzt.bean.generator.OutfallKey">
    delete from zx_outfall
    where outfallid = #{outfallid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zxmoa.myhzt.bean.generator.OutfallExample">
    delete from zx_outfall
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zxmoa.myhzt.bean.generator.OutfallWithBLOBs">
    insert into zx_outfall (outfallid, outfallname, outfalltypeid, 
      riverid, outfallno, lat, 
      lng, fallmethod, inrivermethod, 
      status, createuserid, modifyuserid, 
      modifytime, createtime, from
      )
    values (#{outfallid,jdbcType=VARCHAR}, #{outfallname,jdbcType=VARCHAR}, #{outfalltypeid,jdbcType=VARCHAR}, 
      #{riverid,jdbcType=VARCHAR}, #{outfallno,jdbcType=VARCHAR}, #{lat,jdbcType=VARCHAR}, 
      #{lng,jdbcType=VARCHAR}, #{fallmethod,jdbcType=VARCHAR}, #{inrivermethod,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{createuserid,jdbcType=VARCHAR}, #{modifyuserid,jdbcType=VARCHAR}, 
      #{modifytime,jdbcType=VARCHAR}, #{createtime,jdbcType=VARCHAR}, #{from,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zxmoa.myhzt.bean.generator.OutfallWithBLOBs">
    insert into zx_outfall
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="outfallid != null">
        outfallid,
      </if>
      <if test="outfallname != null">
        outfallname,
      </if>
      <if test="outfalltypeid != null">
        outfalltypeid,
      </if>
      <if test="riverid != null">
        riverid,
      </if>
      <if test="outfallno != null">
        outfallno,
      </if>
      <if test="lat != null">
        lat,
      </if>
      <if test="lng != null">
        lng,
      </if>
      <if test="fallmethod != null">
        fallmethod,
      </if>
      <if test="inrivermethod != null">
        inrivermethod,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createuserid != null">
        createuserid,
      </if>
      <if test="modifyuserid != null">
        modifyuserid,
      </if>
      <if test="modifytime != null">
        modifytime,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="from != null">
        from,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="outfallid != null">
        #{outfallid,jdbcType=VARCHAR},
      </if>
      <if test="outfallname != null">
        #{outfallname,jdbcType=VARCHAR},
      </if>
      <if test="outfalltypeid != null">
        #{outfalltypeid,jdbcType=VARCHAR},
      </if>
      <if test="riverid != null">
        #{riverid,jdbcType=VARCHAR},
      </if>
      <if test="outfallno != null">
        #{outfallno,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=VARCHAR},
      </if>
      <if test="lng != null">
        #{lng,jdbcType=VARCHAR},
      </if>
      <if test="fallmethod != null">
        #{fallmethod,jdbcType=VARCHAR},
      </if>
      <if test="inrivermethod != null">
        #{inrivermethod,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createuserid != null">
        #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="modifyuserid != null">
        #{modifyuserid,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null">
        #{modifytime,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="from != null">
        #{from,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zxmoa.myhzt.bean.generator.OutfallExample" resultType="java.lang.Long">
    select count(*) from zx_outfall
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zx_outfall
    <set>
      <if test="record.outfallid != null">
        outfallid = #{record.outfallid,jdbcType=VARCHAR},
      </if>
      <if test="record.outfallname != null">
        outfallname = #{record.outfallname,jdbcType=VARCHAR},
      </if>
      <if test="record.outfalltypeid != null">
        outfalltypeid = #{record.outfalltypeid,jdbcType=VARCHAR},
      </if>
      <if test="record.riverid != null">
        riverid = #{record.riverid,jdbcType=VARCHAR},
      </if>
      <if test="record.outfallno != null">
        outfallno = #{record.outfallno,jdbcType=VARCHAR},
      </if>
      <if test="record.lat != null">
        lat = #{record.lat,jdbcType=VARCHAR},
      </if>
      <if test="record.lng != null">
        lng = #{record.lng,jdbcType=VARCHAR},
      </if>
      <if test="record.fallmethod != null">
        fallmethod = #{record.fallmethod,jdbcType=VARCHAR},
      </if>
      <if test="record.inrivermethod != null">
        inrivermethod = #{record.inrivermethod,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createuserid != null">
        createuserid = #{record.createuserid,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyuserid != null">
        modifyuserid = #{record.modifyuserid,jdbcType=VARCHAR},
      </if>
      <if test="record.modifytime != null">
        modifytime = #{record.modifytime,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.from != null">
        from = #{record.from,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update zx_outfall
    set outfallid = #{record.outfallid,jdbcType=VARCHAR},
      outfallname = #{record.outfallname,jdbcType=VARCHAR},
      outfalltypeid = #{record.outfalltypeid,jdbcType=VARCHAR},
      riverid = #{record.riverid,jdbcType=VARCHAR},
      outfallno = #{record.outfallno,jdbcType=VARCHAR},
      lat = #{record.lat,jdbcType=VARCHAR},
      lng = #{record.lng,jdbcType=VARCHAR},
      fallmethod = #{record.fallmethod,jdbcType=VARCHAR},
      inrivermethod = #{record.inrivermethod,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      createuserid = #{record.createuserid,jdbcType=VARCHAR},
      modifyuserid = #{record.modifyuserid,jdbcType=VARCHAR},
      modifytime = #{record.modifytime,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=VARCHAR},
      from = #{record.from,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zx_outfall
    set outfallid = #{record.outfallid,jdbcType=VARCHAR},
      outfallname = #{record.outfallname,jdbcType=VARCHAR},
      outfalltypeid = #{record.outfalltypeid,jdbcType=VARCHAR},
      riverid = #{record.riverid,jdbcType=VARCHAR},
      outfallno = #{record.outfallno,jdbcType=VARCHAR},
      lat = #{record.lat,jdbcType=VARCHAR},
      lng = #{record.lng,jdbcType=VARCHAR},
      fallmethod = #{record.fallmethod,jdbcType=VARCHAR},
      inrivermethod = #{record.inrivermethod,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      createuserid = #{record.createuserid,jdbcType=VARCHAR},
      modifyuserid = #{record.modifyuserid,jdbcType=VARCHAR},
      modifytime = #{record.modifytime,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zxmoa.myhzt.bean.generator.OutfallWithBLOBs">
    update zx_outfall
    <set>
      <if test="outfallname != null">
        outfallname = #{outfallname,jdbcType=VARCHAR},
      </if>
      <if test="outfalltypeid != null">
        outfalltypeid = #{outfalltypeid,jdbcType=VARCHAR},
      </if>
      <if test="riverid != null">
        riverid = #{riverid,jdbcType=VARCHAR},
      </if>
      <if test="outfallno != null">
        outfallno = #{outfallno,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        lat = #{lat,jdbcType=VARCHAR},
      </if>
      <if test="lng != null">
        lng = #{lng,jdbcType=VARCHAR},
      </if>
      <if test="fallmethod != null">
        fallmethod = #{fallmethod,jdbcType=VARCHAR},
      </if>
      <if test="inrivermethod != null">
        inrivermethod = #{inrivermethod,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createuserid != null">
        createuserid = #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="modifyuserid != null">
        modifyuserid = #{modifyuserid,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null">
        modifytime = #{modifytime,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="from != null">
        from = #{from,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where outfallid = #{outfallid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zxmoa.myhzt.bean.generator.OutfallWithBLOBs">
    update zx_outfall
    set outfallname = #{outfallname,jdbcType=VARCHAR},
      outfalltypeid = #{outfalltypeid,jdbcType=VARCHAR},
      riverid = #{riverid,jdbcType=VARCHAR},
      outfallno = #{outfallno,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=VARCHAR},
      lng = #{lng,jdbcType=VARCHAR},
      fallmethod = #{fallmethod,jdbcType=VARCHAR},
      inrivermethod = #{inrivermethod,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      createuserid = #{createuserid,jdbcType=VARCHAR},
      modifyuserid = #{modifyuserid,jdbcType=VARCHAR},
      modifytime = #{modifytime,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR},
      from = #{from,jdbcType=LONGVARCHAR}
    where outfallid = #{outfallid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zxmoa.myhzt.bean.generator.Outfall">
    update zx_outfall
    set outfallname = #{outfallname,jdbcType=VARCHAR},
      outfalltypeid = #{outfalltypeid,jdbcType=VARCHAR},
      riverid = #{riverid,jdbcType=VARCHAR},
      outfallno = #{outfallno,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=VARCHAR},
      lng = #{lng,jdbcType=VARCHAR},
      fallmethod = #{fallmethod,jdbcType=VARCHAR},
      inrivermethod = #{inrivermethod,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      createuserid = #{createuserid,jdbcType=VARCHAR},
      modifyuserid = #{modifyuserid,jdbcType=VARCHAR},
      modifytime = #{modifytime,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR}
    where outfallid = #{outfallid,jdbcType=VARCHAR}
  </update>
</mapper>